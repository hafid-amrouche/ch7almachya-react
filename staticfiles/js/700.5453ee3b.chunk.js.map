{"version":3,"file":"static/js/700.5453ee3b.chunk.js","mappings":"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","sources":["Screens/Error404.js","Screens/Messages/ChatBox/UI/FriendMessage.js","Screens/Messages/ChatBox/UI/UserMessage.js","Screens/Messages/Messages.js","Screens/Messages/ChatBox.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { BrowserContext } from '../store/BrowserContext'\r\nimport { TranslationContext } from '../store/TranslationContext'\r\n\r\nconst Error404 = () => {\r\n  const {Left} = useContext(BrowserContext)\r\n  const {translate} = useContext(TranslationContext)\r\n  return (\r\n    <div className='text-center py-5 my-5'>\r\n      <div><i className=\"fa-solid fa-triangle-exclamation text-danger\" style={{fontSize:200}}></i></div>\r\n      <h1 className='p-3 text-danger'>{translate('Error 404')}</h1>\r\n      <Link to='/' className='w-fit-content d-flex align-items-center justify-content-center gap-3 btn btn-outline-success m-auto border-0 px-4 py-3' style={{fontSize:30}}><i className={`fa-solid fa-arrow-${Left}`}></i>{translate('Go back home')}</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error404","import React, { useContext } from 'react'\r\nimport { hideUnhide, scrollToElement } from '../../../../utils'\r\nimport { formatDateTimeInLanguage } from '../../../../utils'\r\nimport { BrowserContext } from '../../../../store/BrowserContext'\r\nimport TimeElapsed from '../../../../Components/TimeElapsed'\r\nconst FriendMessage = ({message, lastMessageId}) => {\r\n  const {togglePopup} = useContext(BrowserContext)\r\n  const {language} = useContext(BrowserContext).browserData\r\n\r\n  const buttonClickHandler=()=>{\r\n    hideUnhide(`message-time-${message.id}`, togglePopup)\r\n    if (lastMessageId == message.id)  setTimeout(() => {scrollToElement(document.getElementById(`message-time-${lastMessageId}`)) }, 0)\r\n  }\r\n  return (\r\n    <>\r\n        <TimeElapsed language={language} time={message.sent_at} hidden id={`message-time-${message.id}`} className='px-2 small text-grey'/>\r\n        <button onClick={buttonClickHandler} className='py-2 px-3  w-fit-content m-1 btn btn-success small text-start' style={{maxWidth: '70%',}}>{message.text}</button>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default FriendMessage","import React, { useContext } from 'react'\r\nimport { hideUnhide, scrollToElement } from '../../../../utils'\r\nimport { BrowserContext } from '../../../../store/BrowserContext'\r\nimport TimeElapsed from '../../../../Components/TimeElapsed'\r\nimport {TranslationContext} from '../../../../store/TranslationContext'\r\n\r\nconst UserMessage = ({message, lastMessageId}) => {\r\n  const {togglePopup,Right} = useContext(BrowserContext)\r\n  const {language} = useContext(BrowserContext).browserData\r\n  const state = message.state || 'sent'\r\n\r\n  const buttonClickHandler=()=>{\r\n    hideUnhide(`message-time-${message.id}`, togglePopup)\r\n    if (lastMessageId == message.id)  setTimeout(() => {scrollToElement(document.getElementById(`message-time-${message.id}`)) }, 0)\r\n  }\r\n  const {translate} = useContext(TranslationContext)\r\n  return (\r\n    <div className={`${ language == 'ar' ? 'd-ltr' : 'd-rtl' }`}>\r\n          <div className={`d-flex align-items-end`}>\r\n            <span className='position-relative'> \r\n              <i hidden={state == 'sent'}  className={`${state === 'notSent' ? 'fa-solid fa-triangle-exclamation text-danger' : 'fa-regular fa-paper-plane color-theme'} fa-xs`}></i>\r\n            </span>\r\n            <button onClick={buttonClickHandler} className={`py-2 px-3 w-fit-content m-1 border rounded-4 ${state === 'notSent' ? 'border-danger text-danger' : 'border-success color-theme'} small text-start`} style={{maxWidth: '70%'}}>{message.text}</button>\r\n          </div>\r\n          { message.sent_at === 'Sending' ? \r\n            <span id={`message-time-${message.id}`} hidden className='px-2 small color-theme'>{translate('Sending')}</span> : \r\n            message.sent_at === 'Not sent' ?\r\n            <span id={`message-time-${message.id}`} hidden className='px-2 small text-danger'>{translate('Not sent')}</span>:\r\n            <TimeElapsed language={language} time={message.sent_at} hidden id={`message-time-${message.id}`} className='px-2 small text-grey'/>\r\n          }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserMessage","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { Avatar } from '../../StyledComponents'\r\nimport AutoResizeTextarea from '../../Components/UI/AutoResizeTextarea'\r\nimport axios from 'axios'\r\nimport { Link, useLocation, useParams } from 'react-router-dom'\r\nimport { UserContext } from '../../store/UserContext'\r\nimport FriendMessage from './ChatBox/UI/FriendMessage'\r\nimport UserMessage from './ChatBox/UI/UserMessage'\r\nimport {Loader} from '../../Components/Loader'\r\nimport Error404 from '../Error404'\r\nimport { isMobileDevice, scrollToElement } from '../../utils'\r\nimport { BrowserContext } from '../../store/BrowserContext'\r\nimport { TranslationContext } from '../../store/TranslationContext'\r\n\r\nconst channel = new BroadcastChannel('myChannel');\r\nconst Messages = ({conversationsWidth}) => {\r\n    let bigScreen = window.innerWidth >= 750\r\n    /////////////////////////\r\n\r\n    const myComponentRef = useRef();\r\n    const {friendId} = useParams()\r\n    const [loadingSendMessage, setloadingSendMessage] =useState(false)\r\n    const [text, setText] = useState('')\r\n    const {userData} = useContext(UserContext)\r\n    const unsentCount = useRef(0)\r\n    const [friendData, setFriendData] = useState(null) \r\n    const sendMessage =()=>{\r\n        setloadingSendMessage(true)\r\n        setText('')\r\n        setMessages(prevState=>[{id:'toBeDeleted', text:text, sent_at : 'Sending', state: 'sending', sender : userData.id}, ...prevState])\r\n        setTimeout(() => {scrollToElement(document.getElementById('flag')) }, 50);\r\n        axios.post('/api/messaging/send-message/',\r\n        {\r\n            friend_id: friendId,\r\n            text : text,\r\n        },\r\n        {\r\n            headers : {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${userData.token}`\r\n            }\r\n        }).then(response=>{\r\n            setText('')\r\n            setloadingSendMessage(false)\r\n            setMessages(prevState=>{\r\n                prevState = prevState.filter(message => message.state !== 'sending')\r\n                return [response.data, ...prevState]\r\n\r\n            })\r\n            const newConversation = {\r\n                text : response.data.text,\r\n                sent_at : (new Date()).toString(),\r\n                message_sender : userData.id,\r\n                is_seen : true\r\n\r\n            }\r\n            setConversations(prev=>{\r\n                const oldConversation = prev.filter(c=> c.friend_id == friendId)[0]\r\n                prev = prev.filter(c=> c.friend_id != friendId)\r\n                prev = [{ ...oldConversation, ...newConversation }, ...prev]\r\n                channel.postMessage({\r\n                    type : 'set-conversations',\r\n                    conversations : prev\r\n                });\r\n                return prev\r\n              })\r\n        }).catch(error=>{\r\n            setloadingSendMessage(false)\r\n            setMessages(prevState=>{\r\n                unsentCount.current +=1\r\n                prevState = prevState.filter(message => message.state !== 'sending')\r\n                return [{id:'NotSent' + unsentCount.current , text:text, sent_at : 'Not sent', state: 'notSent', sender : userData.id}, ...prevState]\r\n            })\r\n        })\r\n    }\r\n\r\n    /////////////////\r\n    const isNext = useRef(false)\r\n    const [messagesLoading, setMessagesLoading] = useState(true)\r\n    const [errorLoadingMessages , setErrorLoadingMessages] = useState(null)\r\n    const [messages, setMessages] = useState([])\r\n    const getMessages =(seenMessages=null)=>{\r\n        axios.post(`/api/messaging/get-messages/`,\r\n            {'seen-messages' : JSON.stringify(seenMessages == null ? messages.map(message=>message.id) : []),\r\n            'friend-id' : friendId},\r\n            {\r\n            headers : {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                'Authorization' : `Bearer ${userData.token}`\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            console.log(response.data)\r\n            if (response.data[2]) setFriendData(response.data[2])\r\n            setMessagesLoading(false)\r\n            setNewMessagesLoading(false)\r\n            isNext.current = response.data[1]\r\n            setMessages(prevState=>[...prevState, ...response.data[0]])\r\n        })\r\n        .catch((error)=>{\r\n            setMessagesLoading(false)\r\n            setNewMessagesLoading(false)\r\n            setErrorLoadingMessages(error)\r\n            document.getElementById('Header').removeAttribute('hidden')\r\n        })\r\n    }\r\n    const location = useLocation()\r\n    useEffect(()=>{\r\n        setFriendData(null)\r\n        isNext.current= false\r\n        setMessagesLoading(true)\r\n        setMessages([])\r\n        getMessages([])\r\n    },[location])\r\n    const [newMessagesLoading, setNewMessagesLoading] = useState(false)\r\n    const getPrevMessages =()=>{\r\n        setNewMessagesLoading(true)\r\n        getMessages()\r\n    }\r\n\r\n    //////////////////////////\r\n    //\r\n    const {setConversations} = useContext(UserContext)\r\n    ///////////////////////\r\n    //\r\n    useEffect(() => {\r\n        if (userData.id && friendId != userData.id){\r\n            const socket = new WebSocket(`ws://${ window.location.hostname }/chat-room/?token=${userData.token}&friend-id=${friendId}`);\r\n            socket.onmessage = (event) => {\r\n                const data = JSON.parse(event.data)\r\n                if (data.type === 'message-update'){\r\n                    setMessages(prev=>[data.message,...prev])\r\n                    if (document.getElementById('chatbox').scrollTop > '-66' ){\r\n                        setTimeout(()=>{document.getElementById('chatbox').scrollTop = 0}, 0)\r\n                    }\r\n                }\r\n            }\r\n            return () => {\r\n                socket.close();\r\n            };\r\n        }\r\n    }, [friendId])\r\n    const {Left, S, E} = useContext(BrowserContext)\r\n    const {translate} = useContext(TranslationContext)\r\n  return (\r\n     errorLoadingMessages ? \r\n        <Error404/> :\r\n        <div className={`bg-white d-flex flex-column vh-100 flex-grow-1 z-index-1`}>\r\n            <div className={`fixed-top bg-white ms-conversation`} style={{marginInlineStart: conversationsWidth, width: window.innerWidth - conversationsWidth, maxWidth: window.innerWidth}}>\r\n                <div className={`gap-2 d-flex align-items-center my-1 p${S}-3 cursor-pointer`}>\r\n                    { !bigScreen && <Link to='/messages/' className='btn btn-outline-success border-0'><i className={`fa-solid fa-chevron-${Left}`}></i></Link>}\r\n                    <Link to={ friendData ? `/@${ friendData.friend_username }/` :'' }>\r\n                        {!friendData ?\r\n                            <>\r\n                                <img width={40} height={40} className='bg-secondary rounded rounded-circle mt-1' ></img>\r\n                                <img width={150} height={20} className='bg-secondary rounded mx-2' ></img>\r\n                            </>:\r\n                            <>\r\n                                <Avatar src={friendData.friend_image} />\r\n                                <strong>{ friendData.friend_name.text ||friendData.friend_name} {friendData.friend_name.is_verified && <img width='16' src='/static/others/verified.png'/>}</strong>\r\n                            </>\r\n                        }\r\n                    </Link>\r\n                </div>\r\n                <hr className='m-0'/>\r\n            </div>\r\n            { messagesLoading ?  \r\n                <div className='d-flex align-items-center justify-content-center vh-100'><Loader className='color-theme' diam='100'/></div>:\r\n                    <div className='vh-100' style={{padding: `49px 0 ${isMobileDevice() & !window.isWebView ? '104' :'54'}px 0`}} >\r\n                        <div className='overflow-auto d-flex flex-column-reverse flex-grow-1 fixed-middle h-100 px-2 mw-100 pb-3'  id='chatbox' ref={myComponentRef}>\r\n                                <div id='flag'/>\r\n                                {messages.map(message=>{\r\n                                    return message.sender === userData.id ? <UserMessage lastMessageId={messages[0].id} key={message.id} message={message} /> : <FriendMessage lastMessageId={messages[0].id}  key={message.id} message={message}/>\r\n                                })}\r\n                                {isNext.current &&\r\n                                    <button disabled={newMessagesLoading} className={`${newMessagesLoading ? '' : 'color-theme '} text-center p-3 h4`} onClick={getPrevMessages}>\r\n                                        {translate('Show older')}\r\n                                    </button>\r\n                                }\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div className={`d-flex gap-1 bg-white col-12 border-top fixed-bottom px-1`} style={{marginInlineStart: conversationsWidth, width: window.innerWidth - conversationsWidth, maxWidth: window.innerWidth}}>\r\n                <AutoResizeTextarea value={text} onChange={(e)=>{setText(e.target.value)}} rows='1' className='flex-grow-1 h-fit-content my-1 border rounded p-2' maxLength={255} style={{resize:'none', outline: 'none'}}></AutoResizeTextarea>\r\n                <button disabled={loadingSendMessage || !text.trim()} onClick={sendMessage} className={`btn btn-outline-success px-2 m${E}-1 rounded-1 my-1 border-0 my-2 h-fit-content align-self-end ${ Left != 'left' && 'fa-flip-horizontal' }`}><i className=\"fa-regular fa-paper-plane fa-xl\"></i></button>\r\n            </div>\r\n        </div>  \r\n  )\r\n}\r\n\r\nexport default Messages","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport Conversations from './Conversations'\r\nimport Messages from './Messages'\r\nimport { UserContext } from '../../store/UserContext'\r\nimport { useParams } from 'react-router-dom'\r\nimport { BrowserContext } from '../../store/BrowserContext'\r\nimport { TranslationContext } from '../../store/TranslationContext'\r\n\r\n\r\nconst ChatBox = () => {\r\n    \r\n    useEffect(()=>{\r\n        document.getElementById('Header') && document.getElementById('Header').setAttribute('hidden', '')\r\n        document.getElementById('main').style.setProperty('padding', '0')\r\n        document.getElementById('main').style.setProperty('margin-top', '0')\r\n        return ()=>{\r\n            document.getElementById('Header') && document.getElementById('Header').removeAttribute('hidden')\r\n            document.getElementById('main').style.removeProperty('padding')\r\n            document.getElementById('main').style.removeProperty('margin-top')\r\n        }\r\n    }, [])  \r\n\r\n    //////////////////////////\r\n    //\r\n    const [coponentReloader, setComponentReloder] = useState(false)\r\n    const conversationsWidth = useRef(0)\r\n    let bigScreen = window.innerWidth >= 750\r\n    useEffect(()=>{\r\n        const handleResize=()=>{\r\n            if (window.innerWidth < 750) conversationsWidth.current = 0\r\n            else if (window.innerWidth > 1250) conversationsWidth.current = 500\r\n            else conversationsWidth.current = window.innerWidth * 0.4\r\n            setComponentReloder(prev=>!prev)\r\n        }\r\n        handleResize()\r\n        window.addEventListener('resize', handleResize);\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, [])\r\n    const {conversations, setConversations} = useContext(UserContext)\r\n    const {friendId} = useParams() \r\n\r\n    const {language} = useContext(BrowserContext).browserData\r\n    const {setTitle, setDescription} = useContext(BrowserContext)\r\n    const {translate}=useContext(TranslationContext)\r\n    useEffect(()=>{\r\n        setTitle(translate('ChatBox') + ` | ${translate('Ch7al Machya')}`) // Translate this\r\n        setDescription(translate('description'))\r\n    },[])\r\n    useEffect(()=>{\r\n        if (conversations){\r\n            const currentConveresation = conversations.find(conversation=> conversation.friend_id == friendId)\r\n            if (currentConveresation){\r\n                if (currentConveresation.is_seen == false){\r\n                    setConversations(prev=>{\r\n                        prev.forEach(conversation=>{\r\n                            if (conversation.friend_id == friendId) conversation.is_seen = true\r\n                            return conversation\r\n                        })\r\n                        return prev\r\n                    })\r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }, [conversations])\r\n    return (\r\n        <div style={{ marginInlineStart :conversationsWidth.current}} className='d-flex'>\r\n            {bigScreen &&\r\n                <div className={`fixed-top bg-white h-100 overflow-y-auto border-${language == 'ar' ? 'start' : 'end'}`} style={{width: conversationsWidth.current}}>\r\n                    <Conversations  fetchConversations={false}/>\r\n                </div>\r\n            }\r\n            <Messages conversationsWidth={conversationsWidth.current} /> \r\n        </div>\r\n    \r\n    )\r\n}\r\nexport default ChatBox"],"names":["Error404","Left","useContext","BrowserContext","translate","TranslationContext","_jsxs","className","children","_jsx","style","fontSize","Link","to","concat","_ref","message","lastMessageId","togglePopup","language","browserData","_Fragment","TimeElapsed","time","sent_at","hidden","id","onClick","buttonClickHandler","hideUnhide","setTimeout","scrollToElement","document","getElementById","maxWidth","text","Right","state","channel","BroadcastChannel","conversationsWidth","bigScreen","window","innerWidth","myComponentRef","useRef","friendId","useParams","loadingSendMessage","setloadingSendMessage","useState","setText","userData","UserContext","unsentCount","friendData","setFriendData","isNext","messagesLoading","setMessagesLoading","errorLoadingMessages","setErrorLoadingMessages","messages","setMessages","getMessages","seenMessages","arguments","length","undefined","axios","post","JSON","stringify","map","headers","token","then","response","console","log","data","setNewMessagesLoading","current","prevState","catch","error","removeAttribute","location","useLocation","useEffect","newMessagesLoading","setConversations","socket","WebSocket","hostname","onmessage","event","parse","type","prev","scrollTop","close","S","E","marginInlineStart","width","friend_username","Avatar","src","friend_image","friend_name","is_verified","height","Loader","diam","padding","isMobileDevice","isWebView","ref","sender","UserMessage","FriendMessage","disabled","getPrevMessages","AutoResizeTextarea","value","onChange","e","target","rows","maxLength","resize","outline","trim","sendMessage","friend_id","Authorization","filter","newConversation","Date","toString","message_sender","is_seen","oldConversation","c","postMessage","conversations","ChatBox","setAttribute","setProperty","removeProperty","coponentReloader","setComponentReloder","handleResize","addEventListener","removeEventListener","setTitle","setDescription","currentConveresation","find","conversation","forEach","Conversations","fetchConversations","Messages"],"sourceRoot":""}