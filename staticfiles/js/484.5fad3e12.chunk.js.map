{"version":3,"file":"static/js/484.5fad3e12.chunk.js","mappings":"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","sources":["Components/UI/RemoveImageModal.js","Screens/settings/ProfileScreen/ProfileImage.js"],"sourcesContent":["import { forwardRef, useContext, useImperativeHandle, useRef } from \"react\"\r\nimport { TranslationContext } from \"../../store/TranslationContext\";\r\n\r\nconst RemoveImageModal = forwardRef((props, ref) =>{\r\n    const ChildRef = useRef()\r\n\r\n    const sharedMethods = () =>({ // to execute openPopUp user sharedMethods().openPopUp()\r\n        openPopUp: openPopUp,\r\n    })\r\n\r\n    useImperativeHandle(ref, sharedMethods);// use methods and functions of child coponent of thier parent\r\n\r\n      const openPopUp = ()=>{\r\n        ChildRef.current.showModal()\r\n    }\r\n    \r\n    const closeDialogHandler = ()=>{\r\n        ChildRef.current.close()\r\n    }\r\n    const {translate}=useContext(TranslationContext)    \r\n    return (\r\n        <dialog ref={ChildRef} onClose={closeDialogHandler} className=\"rounded border-color-theme bg-white\">\r\n            <p className=\"\">{translate('Are you sure you want to delete your profile picture ?')}</p>\r\n            <form method=\"dialog\" className=\"mt-4\">\r\n                <button className=\"btn btn-outline-danger m-2\" onClick={props.removeProfileImage}>{translate('Delete')}</button>\r\n                <button className=\"btn btn-outline-dark m-2\">{translate('Cancel')}</button>\r\n            </form>\r\n        </dialog>\r\n    )\r\n})\r\nexport default RemoveImageModal","import React, { useContext, useRef, useState } from 'react'\r\nimport RemoveImageModal from '../../../Components/UI/RemoveImageModal'\r\nimport axios from 'axios'\r\nimport { UserContext } from '../../../store/UserContext'\r\nimport { copyText, reduceImageQuality } from '../../../utils'\r\nimport { Message } from '../../../Components/Message'\r\nimport { TranslationContext } from '../../../store/TranslationContext'\r\n\r\nconst ProfileImage = () => {\r\n    const {userData, setUserData} = useContext(UserContext)\r\n    const config = {\r\n        headers : {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${userData.token}`\r\n        }\r\n    }\r\n    const [imageLoading, setImageLoading] = useState(false)\r\n    const [imageError, setImageError] = useState(false)\r\n    \r\n    const openRemoveImageModal = useRef()\r\n    const removeImageButtonHandler = ()=>{\r\n      openRemoveImageModal.current.openPopUp()\r\n    }\r\n    const imageFormRef = useRef()\r\n    const removeProfileImage = async()=>{\r\n        setImageLoading(true)\r\n        try {\r\n          const {data} = await axios.post(\r\n            '/api/settings/remove-profile-image/',\r\n            {},\r\n            config) \r\n          setUserData((prevState)=>{\r\n            let newUserData = {\r\n              ...prevState,\r\n              extention:{\r\n                ...prevState.extention,\r\n                image : data.image , \r\n                image_150 : data.image_150\r\n              }\r\n            }\r\n            localStorage.setItem('userData', JSON.stringify(newUserData))  \r\n            return newUserData\r\n          })\r\n          setImageLoading(false)\r\n          setImageError(null)\r\n          \r\n        }catch(error){\r\n          setImageLoading(false)\r\n          setImageError(error)\r\n          console.log(error)\r\n        }\r\n        imageFormRef.current.reset()\r\n    }\r\n    const updateProfileImage = async()=>{\r\n        setImageLoading(true)\r\n        try {\r\n          let file = await reduceImageQuality(imageInputRef.current.files, 0.5, 1080)\r\n          const {data} = await axios.post(\r\n            '/api/settings/update-profile-image/',\r\n            {\r\n              image : file[0],\r\n            },\r\n            config) \r\n          const newUserData = {\r\n            ...userData, \r\n            extention : {\r\n              ...userData.extention,\r\n              image : data.image, \r\n              image_150 : data.image_150\r\n            }\r\n          }\r\n          setUserData(newUserData)\r\n          localStorage.setItem('userData', JSON.stringify(newUserData))  \r\n          setImageLoading(false)\r\n          setImageError(null)\r\n          \r\n        }catch(error){\r\n          setImageLoading(false)\r\n          setImageError(error)\r\n          console.log(error)\r\n        }\r\n        imageFormRef.current.reset()\r\n      }\r\n      const imageInputRef = useRef()\r\n      const removeImageButton = useRef()\r\n      const clickImageInput = ()=>{\r\n        imageInputRef.current.click()\r\n      }\r\n  const {translate}=useContext(TranslationContext)\r\n  return (\r\n    <div className=\"p-2 w-100 pt-3\">\r\n        <RemoveImageModal removeProfileImage={removeProfileImage} ref={ openRemoveImageModal }/>\r\n        <div className=\"card h-100\">\r\n        <div className=\"account-settings\">\r\n            <div className=\"user-profile\">\r\n            <div className=\"user-avatar text-center\">\r\n                <span style={{backgroundImage : `url('${userData.extention.image}')`}} className={`border border-2 image-in-circle ${ imageLoading ? 'blur' : ''}`}>\r\n                <button ref={removeImageButton} hidden={userData.extention.image ==='/static/others/user.png' || userData.extention.image ==='/static/others/page_icon.png'} style={{right: -25}} className='position-absolute rounded-1 btn btn-outline-danger px-2 py-1 border-0' onClick={removeImageButtonHandler}> <i className=\"fa-solid fa-trash fa-xl\"></i> </button>\r\n                </span>\r\n            </div>\r\n            <div className='text-center d-flex align-items-center justify-content-center fw-bold text-grey mb-3 cursor-pointer mt-2' onClick={()=>copyText(userData.username)}>\r\n                <h5>@{ userData.username }</h5>\r\n                {userData.page && userData.page.is_verified && <img width='20' src='/static/others/verified.png' />}\r\n                <i className=\"fa-regular fa-copy mx-1\" />\r\n            </div>\r\n            {imageError && <Message removeAlert={()=> setImageError(null)} variant='danger' className='mt-3'>{imageError.response.data.detail || imageError.message}</Message>}\r\n            <div className='text-center'>\r\n                {!imageLoading && <button className='btn btn-outline-success m-1' onClick={clickImageInput}>{translate('Upload image')}</button>}\r\n            </div>\r\n            <form ref={imageFormRef}>\r\n                <input hidden type='file' accept=\"image/*\" ref={imageInputRef} onChange={updateProfileImage}/>\r\n            </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileImage"],"names":["forwardRef","props","ref","ChildRef","useRef","useImperativeHandle","sharedMethods","openPopUp","current","showModal","translate","useContext","TranslationContext","_jsxs","onClose","closeDialogHandler","close","className","children","_jsx","method","onClick","removeProfileImage","ProfileImage","userData","setUserData","UserContext","config","headers","Authorization","concat","token","imageLoading","setImageLoading","useState","imageError","setImageError","openRemoveImageModal","imageFormRef","imageInputRef","removeImageButton","RemoveImageModal","async","data","axios","post","prevState","newUserData","extention","image","image_150","localStorage","setItem","JSON","stringify","error","console","log","reset","style","backgroundImage","hidden","right","removeImageButtonHandler","copyText","username","page","is_verified","width","src","Message","removeAlert","variant","response","detail","message","clickImageInput","click","type","accept","onChange","file","reduceImageQuality","files"],"sourceRoot":""}