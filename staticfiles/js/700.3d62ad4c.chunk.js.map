{"version":3,"file":"static/js/700.3d62ad4c.chunk.js","mappings":"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","sources":["Screens/Error404.js","Screens/Messages/ChatBox/UI/FriendMessage.js","Screens/Messages/ChatBox/UI/UserMessage.js","Screens/Messages/Messages.js","Screens/Messages/ChatBox.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { BrowserContext } from '../store/BrowserContext'\r\nimport { TranslationContext } from '../store/TranslationContext'\r\n\r\nconst Error404 = () => {\r\n  const {Left} = useContext(BrowserContext)\r\n  const {translate} = useContext(TranslationContext)\r\n  return (\r\n    <div className='text-center py-5 my-5'>\r\n      <div><i className=\"fa-solid fa-triangle-exclamation text-danger\" style={{fontSize:200}}></i></div>\r\n      <h1 className='p-3 text-danger'>{translate('Error 404')}</h1>\r\n      <Link to='/' className='w-fit-content d-flex align-items-center justify-content-center gap-3 btn btn-outline-success m-auto border-0 px-4 py-3' style={{fontSize:30}}><i className={`fa-solid fa-arrow-${Left}`}></i>{translate('Go back home')}</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error404","import React, { useContext } from 'react'\r\nimport { hideUnhide, } from '../../../../utils'\r\nimport { BrowserContext } from '../../../../store/BrowserContext'\r\nimport TimeElapsed from '../../../../Components/TimeElapsed'\r\nconst FriendMessage = ({message, lastMessageId}) => {\r\n  const {togglePopup} = useContext(BrowserContext)\r\n  const {language} = useContext(BrowserContext).browserData\r\n\r\n  const buttonClickHandler=()=>{\r\n    hideUnhide(`message-time-${message.id}`, togglePopup)\r\n    if (lastMessageId == message.id) setTimeout(()=>{document.getElementById('chatbox').scrollTop = 0}, 0)\r\n  }\r\n  return (\r\n    <>\r\n        <TimeElapsed language={language} time={message.sent_at} hidden id={`message-time-${message.id}`} className='px-2 small text-grey'/>\r\n        <button onClick={buttonClickHandler} className='py-2 px-3  w-fit-content m-1 btn btn-success small text-start' style={{maxWidth: '70%',}}>{message.text}</button>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default FriendMessage","import React, { useContext } from 'react'\r\nimport { hideUnhide } from '../../../../utils'\r\nimport { BrowserContext } from '../../../../store/BrowserContext'\r\nimport TimeElapsed from '../../../../Components/TimeElapsed'\r\nimport {TranslationContext} from '../../../../store/TranslationContext'\r\n\r\nconst UserMessage = ({message, lastMessageId}) => {\r\n  const {togglePopup,Right} = useContext(BrowserContext)\r\n  const {language} = useContext(BrowserContext).browserData\r\n  const state = message.state || 'sent'\r\n\r\n  const buttonClickHandler=()=>{\r\n    hideUnhide(`message-time-${message.id}`, togglePopup)\r\n    if (lastMessageId == message.id) setTimeout(()=>{document.getElementById('chatbox').scrollTop = 0}, 0)\r\n  }\r\n  const {translate} = useContext(TranslationContext)\r\n  return (\r\n    <div className={`${ language == 'ar' ? 'd-ltr' : 'd-rtl' }`}>\r\n          <div className={`d-flex align-items-end`}>\r\n            <span className='position-relative'> \r\n              <i hidden={state == 'sent'}  className={`${state === 'notSent' ? 'fa-solid fa-triangle-exclamation text-danger' : 'fa-regular fa-paper-plane color-theme'} fa-xs`}></i>\r\n            </span>\r\n            <button onClick={buttonClickHandler} className={`py-2 px-3 w-fit-content m-1 border rounded-4 ${state === 'notSent' ? 'border-danger text-danger' : 'border-success color-theme'} small text-start`} style={{maxWidth: '70%'}}>{message.text}</button>\r\n          </div>\r\n          { message.sent_at === 'Sending' ? \r\n            <span id={`message-time-${message.id}`} hidden className='px-2 small color-theme'>{translate('Sending')}</span> : \r\n            message.sent_at === 'Not sent' ?\r\n            <span id={`message-time-${message.id}`} hidden className='px-2 small text-danger'>{translate('Not sent')}</span>:\r\n            <TimeElapsed language={language} time={message.sent_at} hidden id={`message-time-${message.id}`} className='px-2 small text-grey'/>\r\n          }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserMessage","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { Avatar } from '../../StyledComponents'\r\nimport AutoResizeTextarea from '../../Components/UI/AutoResizeTextarea'\r\nimport axios from 'axios'\r\nimport { Link, useLocation, useParams } from 'react-router-dom'\r\nimport { UserContext } from '../../store/UserContext'\r\nimport FriendMessage from './ChatBox/UI/FriendMessage'\r\nimport UserMessage from './ChatBox/UI/UserMessage'\r\nimport {Loader} from '../../Components/Loader'\r\nimport Error404 from '../Error404'\r\nimport { scrollToElement } from '../../utils'\r\nimport { BrowserContext } from '../../store/BrowserContext'\r\nimport { TranslationContext } from '../../store/TranslationContext'\r\n\r\nconst channel = new BroadcastChannel('myChannel');\r\nconst Messages = ({conversationsWidth}) => {\r\n    let bigScreen = window.innerWidth >= 750\r\n    /////////////////////////\r\n\r\n    const myComponentRef = useRef();\r\n    const {friendId} = useParams()\r\n    const [loadingSendMessage, setloadingSendMessage] =useState(false)\r\n    const [text, setText] = useState('')\r\n    const {userData} = useContext(UserContext)\r\n    const unsentCount = useRef(0)\r\n    const [friendData, setFriendData] = useState(null) \r\n    const sendMessage =()=>{\r\n        setloadingSendMessage(true)\r\n        setText('')\r\n        setMessages(prevState=>[{id:'toBeDeleted', text:text, sent_at : 'Sending', state: 'sending', sender : userData.id}, ...prevState])\r\n        setTimeout(()=>{document.getElementById('chatbox').scrollTop = 0}, 0)\r\n        axios.post('/api/messaging/send-message/',\r\n        {\r\n            friend_id: friendId,\r\n            text : text,\r\n        },\r\n        {\r\n            headers : {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${userData.token}`\r\n            }\r\n        }).then(response=>{\r\n            setloadingSendMessage(false)\r\n        }).catch(error=>{\r\n            setloadingSendMessage(false)\r\n            setMessages(prevState=>{\r\n                unsentCount.current +=1\r\n                prevState = prevState.filter(message => message.state !== 'sending')\r\n                return [{id:'NotSent' + unsentCount.current , text:text, sent_at : 'Not sent', state: 'notSent', sender : userData.id}, ...prevState]\r\n            })\r\n        })\r\n    }\r\n\r\n    /////////////////\r\n    const isNext = useRef(false)\r\n    const [messagesLoading, setMessagesLoading] = useState(true)\r\n    const [errorLoadingMessages , setErrorLoadingMessages] = useState(null)\r\n    const [messages, setMessages] = useState([])\r\n    const getMessages =(seenMessages=null)=>{\r\n        axios.post(`/api/messaging/get-messages/`,\r\n            {'seen-messages' : JSON.stringify(seenMessages == null ? messages.map(message=>message.id) : []),\r\n            'friend-id' : friendId},\r\n            {\r\n            headers : {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                'Authorization' : `Bearer ${userData.token}`\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            if (response.data[2]) setFriendData(response.data[2])\r\n            setMessagesLoading(false)\r\n            setNewMessagesLoading(false)\r\n            isNext.current = response.data[1]\r\n            setMessages(prevState=>[...prevState, ...response.data[0]])\r\n            setTimeout(()=>{document.getElementById('chatbox').scrollTop = 0}, 0)\r\n        })\r\n        .catch((error)=>{\r\n            setMessagesLoading(false)\r\n            setNewMessagesLoading(false)\r\n            setErrorLoadingMessages(error) \r\n            document.getElementById('Header').removeAttribute('hidden')\r\n        })\r\n    }\r\n    const location = useLocation()\r\n    useEffect(()=>{\r\n        setFriendData(null)\r\n        isNext.current= false\r\n        setMessagesLoading(true)\r\n        setMessages([])\r\n        getMessages([])\r\n    },[location])\r\n    const [newMessagesLoading, setNewMessagesLoading] = useState(false)\r\n    const getPrevMessages =()=>{\r\n        setNewMessagesLoading(true)\r\n        getMessages()\r\n    }\r\n\r\n    //////////////////////////\r\n    //\r\n    useEffect(() => {\r\n        if (userData.id){\r\n            const socket = new WebSocket(`ws://127.0.0.1:8000/chat-room/?token=${userData.token}&friend-id=${friendId}`);\r\n            socket.onmessage = (event) => {\r\n                const data = JSON.parse(event.data)\r\n                if (data.type === 'message-update'){\r\n                    setMessages(prev=>[data.message,...prev.filter(message => message.state !== 'sending')])\r\n                    if (document.getElementById('chatbox').scrollTop > -66 ){\r\n                        setTimeout(()=>{document.getElementById('chatbox').scrollTop =  0}, 0)\r\n                    }\r\n                }\r\n            }\r\n            return () => {\r\n                socket.close();\r\n            };\r\n        }\r\n    }, [friendId])\r\n    const {Left, S, E} = useContext(BrowserContext)\r\n    const {translate} = useContext(TranslationContext)\r\n  return (\r\n     errorLoadingMessages ? \r\n        <Error404/> :\r\n        <div className={`bg-white d-flex flex-column vh-100 flex-grow-1 z-index-1`}>\r\n            <div className={`fixed-top bg-white ms-conversation`} style={{marginInlineStart: conversationsWidth, width: window.innerWidth - conversationsWidth, maxWidth: window.innerWidth}}>\r\n                <div className={`gap-2 d-flex align-items-center my-1 p${S}-3 cursor-pointer`}>\r\n                    { !bigScreen && <Link to='/messages/' className='btn btn-outline-success border-0'><i className={`fa-solid fa-chevron-${Left}`}></i></Link>}\r\n                    <Link to={ friendData ? `/@${ friendData.friend_username }/` :'' }>\r\n                        {!friendData ?\r\n                            <>\r\n                                <img width={40} height={40} className='bg-secondary rounded rounded-circle mt-1' ></img>\r\n                                <img width={150} height={20} className='bg-secondary rounded mx-2' ></img>\r\n                            </>:\r\n                            <>\r\n                                <Avatar src={friendData.friend_image} />\r\n                                <strong>{ friendData.friend_name.text ||friendData.friend_name} {friendData.friend_name.is_verified && <img width='16' src='/static/others/verified.png'/>}</strong>\r\n                            </>\r\n                        }\r\n                    </Link>\r\n                </div>\r\n                <hr className='m-0'/>\r\n            </div>\r\n            { messagesLoading ?  \r\n                <div className='d-flex align-items-center justify-content-center vh-100'><Loader className='color-theme' diam='100'/></div>:\r\n                    <div style={{position: 'fixed', bottom: 54, height: 'calc(100% - 103px)', width: `calc( 100% - ${conversationsWidth}px)`}} >\r\n                        <div className='overflow-auto d-flex flex-column-reverse flex-grow-1 fixed-middle h-100 mw-100' style={{padding: `0 8px 8px 8px`}}  id='chatbox' ref={myComponentRef}>\r\n                                <div id='flag'/>\r\n                                {messages.map(message=>{\r\n                                    return message.sender === userData.id ? <UserMessage lastMessageId={messages[0].id} key={message.id} message={message} /> : <FriendMessage lastMessageId={messages[0].id}  key={message.id} message={message}/>\r\n                                })}\r\n                                {isNext.current &&\r\n                                    <button disabled={newMessagesLoading} className={`${newMessagesLoading ? '' : 'color-theme '} text-center p-3 h4`} onClick={getPrevMessages}>\r\n                                        {translate('Show older')}\r\n                                    </button>\r\n                                }\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div className={`d-flex gap-1 bg-white col-12 border-top fixed-bottom px-1`} style={{marginInlineStart: conversationsWidth, width: window.innerWidth - conversationsWidth, maxWidth: window.innerWidth}}>\r\n                <AutoResizeTextarea value={text} onChange={(e)=>{setText(e.target.value)}} rows='1' className='flex-grow-1 h-fit-content my-1 border rounded p-2' maxLength={255} style={{resize:'none', outline: 'none'}}></AutoResizeTextarea>\r\n                <button disabled={loadingSendMessage || !text.trim()} onClick={sendMessage} className={`btn btn-outline-success px-2 m${E}-1 rounded-1 my-1 border-0 my-2 h-fit-content align-self-end ${ Left != 'left' && 'fa-flip-horizontal' }`}><i className=\"fa-regular fa-paper-plane fa-xl\"></i></button>\r\n            </div>\r\n        </div>  \r\n  )\r\n}\r\n\r\nexport default Messages","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport Conversations from './Conversations'\r\nimport Messages from './Messages'\r\nimport { UserContext } from '../../store/UserContext'\r\nimport { useParams } from 'react-router-dom'\r\nimport { BrowserContext } from '../../store/BrowserContext'\r\nimport { TranslationContext } from '../../store/TranslationContext'\r\n\r\n\r\nconst ChatBox = () => {\r\n    \r\n    useEffect(()=>{\r\n        document.getElementById('Header') && document.getElementById('Header').setAttribute('hidden', '')\r\n        document.getElementById('main').style.setProperty('padding', '0')\r\n        document.getElementById('main').style.setProperty('margin-top', '0')\r\n        return ()=>{\r\n            document.getElementById('Header') && document.getElementById('Header').removeAttribute('hidden')\r\n            document.getElementById('main').style.removeProperty('padding')\r\n            document.getElementById('main').style.removeProperty('margin-top')\r\n        }\r\n    }, [])  \r\n\r\n    //////////////////////////\r\n    //\r\n    const [coponentReloader, setComponentReloder] = useState(false)\r\n    const conversationsWidth = useRef(0)\r\n    let bigScreen = window.innerWidth >= 750\r\n    useEffect(()=>{\r\n        const handleResize=()=>{\r\n            if (window.innerWidth < 750) conversationsWidth.current = 0\r\n            else if (window.innerWidth > 1250) conversationsWidth.current = 500\r\n            else conversationsWidth.current = window.innerWidth * 0.4\r\n            setComponentReloder(prev=>!prev)\r\n        }\r\n        handleResize()\r\n        window.addEventListener('resize', handleResize);\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, [])\r\n    const {conversations, setConversations} = useContext(UserContext)\r\n    const {friendId} = useParams() \r\n\r\n    const {language} = useContext(BrowserContext).browserData\r\n    const {setTitle, setDescription} = useContext(BrowserContext)\r\n    const {translate}=useContext(TranslationContext)\r\n    useEffect(()=>{\r\n        setTitle(translate('ChatBox') + ` | ${translate('Ch7al Machya')}`) // Translate this\r\n        setDescription(translate('description'))\r\n    },[])\r\n    useEffect(()=>{\r\n        if (conversations){\r\n            const currentConveresation = conversations.find(conversation=> conversation.friend_id == friendId)\r\n            if (currentConveresation){\r\n                if (currentConveresation.is_seen == false){\r\n                    setConversations(prev=>{\r\n                        prev.forEach(conversation=>{\r\n                            if (conversation.friend_id == friendId) conversation.is_seen = true\r\n                            return conversation\r\n                        })\r\n                        return prev\r\n                    })\r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }, [conversations])\r\n    return (\r\n        <div style={{ marginInlineStart :conversationsWidth.current}} className='d-flex'>\r\n            {bigScreen &&\r\n                <div className={`fixed-top bg-white h-100 overflow-y-auto border-${language == 'ar' ? 'start' : 'end'}`} style={{width: conversationsWidth.current}}>\r\n                    <Conversations  fetchConversations={false}/>\r\n                </div>\r\n            }\r\n            <Messages conversationsWidth={conversationsWidth.current} /> \r\n        </div>\r\n    \r\n    )\r\n}\r\nexport default ChatBox"],"names":["Error404","Left","useContext","BrowserContext","translate","TranslationContext","_jsxs","className","children","_jsx","style","fontSize","Link","to","concat","_ref","message","lastMessageId","togglePopup","language","browserData","_Fragment","TimeElapsed","time","sent_at","hidden","id","onClick","buttonClickHandler","hideUnhide","setTimeout","document","getElementById","scrollTop","maxWidth","text","Right","state","BroadcastChannel","conversationsWidth","bigScreen","window","innerWidth","myComponentRef","useRef","friendId","useParams","loadingSendMessage","setloadingSendMessage","useState","setText","userData","UserContext","unsentCount","friendData","setFriendData","isNext","messagesLoading","setMessagesLoading","errorLoadingMessages","setErrorLoadingMessages","messages","setMessages","getMessages","seenMessages","arguments","length","undefined","axios","post","JSON","stringify","map","headers","token","then","response","data","setNewMessagesLoading","current","prevState","catch","error","removeAttribute","location","useLocation","useEffect","newMessagesLoading","socket","WebSocket","onmessage","event","parse","type","prev","filter","close","S","E","marginInlineStart","width","friend_username","Avatar","src","friend_image","friend_name","is_verified","height","Loader","diam","position","bottom","padding","ref","sender","UserMessage","FriendMessage","disabled","getPrevMessages","AutoResizeTextarea","value","onChange","e","target","rows","maxLength","resize","outline","trim","sendMessage","friend_id","Authorization","ChatBox","setAttribute","setProperty","removeProperty","coponentReloader","setComponentReloder","handleResize","addEventListener","removeEventListener","conversations","setConversations","setTitle","setDescription","currentConveresation","find","conversation","is_seen","forEach","Conversations","fetchConversations","Messages"],"sourceRoot":""}