{"version":3,"file":"static/js/170.55e1f611.chunk.js","mappings":"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","sources":["Components/ReportModal.js","Components/UI/AutoResizeTextarea.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { createPortal } from 'react-dom'\r\nimport axios from 'axios'\r\nimport { UserContext } from '../store/UserContext'\r\nimport { Loader } from './Loader'\r\nimport AutoResizeTextarea from '../Components/UI/AutoResizeTextarea'\r\nimport { Message } from './Message'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { TranslationContext } from '../store/TranslationContext'\r\n\r\nconst StyledComponent = styled.dialog`\r\nmax-width: 800px;\r\nwidth: -webkit-fill-available;\r\nbackground-color: transparent;\r\nborder: none;\r\noutline: none;\r\n&:-internal-dialog-in-top-layer::backdrop {\r\n    background: rgba(0, 0, 0, 0.9);\r\n}\r\n`\r\n\r\nconst ReportModal = ({reportData, setReportData})=>{\r\n    const [reportLoading, setReportLoaidng] = useState(false)\r\n    const [errorReporting, setErrorReporting] = useState(false)\r\n    const [responseData, setResponseData] = useState(null) \r\n\r\n    const ChildRef = useRef()\r\n        \r\n    const closeDialogHandler = ()=>{\r\n        setReportData(null)\r\n    }\r\n    \r\n    const userData = useContext(UserContext).userData\r\n\r\n    const config = {\r\n        headers : {\r\n          \"Content-Type\" : \"multipart/form-data\",\r\n          \"Authorization\" : `Bearer ${userData.token}`\r\n        }\r\n    }\r\n\r\n    const report = ()=>{\r\n        setReportLoaidng(true)\r\n        axios.post(\r\n            '/api/report/',\r\n            {...reportData},\r\n            config\r\n        ).then((response)=>{\r\n            reportSent.current=true\r\n            setResponseData(response.data)\r\n            setReportLoaidng(false)\r\n        }).catch((error)=>{ \r\n            reportSent.current=true\r\n            setErrorReporting(error)\r\n            setReportLoaidng(false)\r\n        })        \r\n    }\r\n    const reportSent = useRef(false)\r\n    const exitClickHandler =(e)=>{\r\n        e.preventDefault()\r\n        reportSent.current=false\r\n        setResponseData(null)\r\n        setErrorReporting(null)\r\n        closeDialogHandler()\r\n    }\r\n    const navigate= useNavigate()\r\n    const location = useLocation()\r\n    const {translate} = useContext(TranslationContext)\r\n\r\n    useEffect(()=>{\r\n        ChildRef.current.showModal()\r\n        return closeDialogHandler\r\n    }, [])\r\n    return createPortal((\r\n        <div className='m-auto'>\r\n            <StyledComponent ref={ChildRef} onClose={closeDialogHandler} >\r\n                <div className='bg-color-white p-3 border rounded'>\r\n                    {responseData && <Message variant='success' removeAlert={()=>setResponseData(null)}> {responseData.detail} </Message>}\r\n                    {errorReporting && <Message variant='danger' removeAlert={()=>setErrorReporting(null)}> {errorReporting.response.data.detail || errorReporting.message} </Message>}\r\n                    {!userData.id && <h5 className='mb-3 d-flex'>{translate('If you want to report this')} {reportData && translate(reportData.type)} { translate('you have to login. Click here') }</h5>}\r\n                    { !reportSent.current && userData.id && <h4 className='mb-3'>{translate('Are you sure you want to report this')} {reportData && translate(reportData.type)} { translate('?') }</h4>}\r\n                    { userData.id &&  <p className='lh-lg'>{translate('We will review the')} {reportData && translate(reportData.type)} { translate('you reported, and we will notify you when it is done, if we find that the user has broken our guilines he will be submitted to paneties and can even go to close his account.') }<br/>\r\n                        {translate('Thank you for making Ch7al machya a safer place.')}\r\n                    </p>}\r\n                    <div className='mt-4'>\r\n                        <form method=\"dialog\" className='d-flex gap-4 flex-row-reverse w-100'>\r\n                            { !reportSent.current && userData.id && <button disabled={reportLoading} className=\"btn btn-danger px-3 d-flex gap-3\" onClick={report}>{translate('Report')} { reportLoading && <Loader diam={23} className='color-white'/>}</button>}\r\n                            { !reportSent.current && userData.id &&<button className=\"btn btn-outline-dark px-3\">{translate('Cancel')}</button>}\r\n                            { (reportSent.current || !userData.id) &&\r\n                                <div className='d-flex justify-content-between w-100'>\r\n                                    { (reportSent.current || !userData.id) && <button className=\"btn btn-outline-success px-4\" onClick={exitClickHandler}>{ translate('Exit') }</button>}\r\n                                    {!userData.id && <button onClick={()=>{closeDialogHandler(); navigate('/login/?redirect=' + location.pathname)}} className='btn btn-success'>{ translate('Login') }</button> }\r\n                                </div>\r\n                            }\r\n\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </StyledComponent>\r\n        </div>\r\n    ), document.getElementById('root'))\r\n}\r\n\r\nexport default ReportModal","import React, { useState } from 'react';\r\n\r\nconst AutoResizeTextarea = ({rows, value, ...props}) => {\r\n\r\n\r\n  const calculateRows = () => {\r\n    // Count the number of lines in the textarea value\r\n    const lineCount = (value.match(/\\n/g) || []).length + 1;\r\n    // Set a minimum number_ of rows to ensure visibility\r\n    const minRows = rows;\r\n    const maxRows = 6; // Set your desired maximum number of rows\r\n\r\n    // Return a value within the specified range\r\n    return Math.min(Math.max(lineCount, minRows), maxRows);\r\n  };\r\n\r\n  return (\r\n    <textarea\r\n      rows={calculateRows()}\r\n      style={{ resize: 'none' }}\r\n      value={value}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AutoResizeTextarea;"],"names":["StyledComponent","styled","dialog","_templateObject","_taggedTemplateLiteral","_ref","reportData","setReportData","reportLoading","setReportLoaidng","useState","errorReporting","setErrorReporting","responseData","setResponseData","ChildRef","useRef","closeDialogHandler","userData","useContext","UserContext","config","headers","concat","token","reportSent","navigate","useNavigate","location","useLocation","translate","TranslationContext","useEffect","current","showModal","createPortal","_jsx","className","children","ref","onClose","_jsxs","Message","variant","removeAlert","detail","response","data","message","id","type","method","disabled","onClick","report","axios","post","then","catch","error","Loader","diam","e","preventDefault","pathname","document","getElementById","rows","value","props","calculateRows","lineCount","match","length","minRows","Math","min","max","style","resize"],"sourceRoot":""}