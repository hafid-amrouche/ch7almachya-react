{"version":3,"file":"static/js/79.dfb81b2a.chunk.js","mappings":"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","sources":["Screens/settings/ProfileScreen/LocationInfo.js"],"sourcesContent":["import React, { useContext, useRef, useState } from 'react'\r\nimport { Message } from '../../../Components/Message'\r\nimport { BrowserContext } from '../../../store/BrowserContext'\r\nimport axios from 'axios'\r\nimport { Loader } from '../../../Components/Loader'\r\nimport { UserContext } from '../../../store/UserContext'\r\nimport { TranslationContext } from '../../../store/TranslationContext'\r\n\r\nconst LocationInfo = () => {\r\n    const {userData, setUserData} = useContext(UserContext)\r\n    const {browserData} = useContext(BrowserContext)\r\n    const [address, setAddress] =  useState(userData.location.address)\r\n    const [city, setCity] =  useState(userData.location.city)\r\n    const [state, setState] =  useState(userData.location.state.code)\r\n    const [location_public, setLocationPublic] = useState(userData.location.location_public)\r\n    const config = {\r\n        headers : {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${userData.token}`\r\n        }\r\n    }\r\n      \r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const updateLocation = async(e)=>{\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        try {\r\n          const {data} = await axios.post(\r\n            '/api/settings/update-location/',\r\n            {\r\n              location_public : location_public,\r\n              city : city.trim(),\r\n              state : state,\r\n              address : address\r\n            },\r\n            config) \r\n          const newData = {...userData, location :data} \r\n          setUserData(newData)\r\n          localStorage.setItem('userData', JSON.stringify(newData))  \r\n          setLoading(false)\r\n          setError(null)\r\n          \r\n        }catch(error){\r\n          setLoading(false)\r\n          setError(error)\r\n          console.log(error)\r\n        }\r\n      }\r\n      const isDisabled = useRef(false)\r\n      isDisabled.current = address.trim() == userData.location.address  && city.trim() == userData.location.city && state == userData.location.state.code && (location_public == userData.location.location_public)\r\n      const {translate} = useContext(TranslationContext)\r\n      return (\r\n        <div className='p-2 w-100'>\r\n            <div className='card d-flex flex-column p-3'>\r\n                <h4 className='color-theme'>Location</h4>\r\n                <div className=\"col-sm-6 col-12\">\r\n                    <div className=\"form-group\">\r\n                        <label>{translate('State')}</label>\r\n                        <select className='form-select'\r\n                        onChange={(e)=> setState(e.target.value)}\r\n                        value={state}\r\n                        >\r\n                        {browserData.states.map((s)=> <option key={s.code} value={s.code}>{s.code} { s.name.toUpperCase() }</option>)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-12\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"city\">{translate('City')}</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={translate(\"Enter city\")}\r\n                    maxLength={50}\r\n                    onChange={(e)=>setCity(e.target.value)}\r\n                    value={city}\r\n                    />\r\n                </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-12\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"city\">{translate('Address')}</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={translate(\"Enter address\")}\r\n                    maxLength={50}\r\n                    onChange={(e)=>setAddress(e.target.value)}\r\n                    value={address}\r\n                    />\r\n                </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"form-group align-items-center gap-3 d-flex p-3\">\r\n                        {translate('Let people see your location')} \r\n                        <input type='checkBox' checked={location_public} onChange={(e)=>{setLocationPublic(e.target.checked)}}/>\r\n                    </div>                    \r\n                </div>\r\n                {error && <Message removeAlert={()=> setError(null)} variant='danger' className='mt-3'>{error.response.data.detail || error.message}</Message>}\r\n                <div>\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                    <button\r\n                        type=\"button\"\r\n                        id=\"submit\"\r\n                        name=\"submit\"\r\n                        className=\"btn btn-success m-2 d-flex gap-2\"\r\n                        onClick={updateLocation}\r\n                        disabled={isDisabled.current || error || loading}\r\n                    >\r\n                        <span>Update location</span>\r\n                        { loading ? <Loader diam={23}/> : ''}\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationInfo"],"names":["LocationInfo","userData","setUserData","useContext","UserContext","browserData","BrowserContext","address","setAddress","useState","location","city","setCity","state","setState","code","location_public","setLocationPublic","config","headers","Authorization","concat","token","loading","setLoading","error","setError","isDisabled","useRef","current","trim","translate","TranslationContext","_jsx","className","children","_jsxs","onChange","e","target","value","states","map","s","name","toUpperCase","htmlFor","type","placeholder","maxLength","checked","Message","removeAlert","variant","response","data","detail","message","id","onClick","async","preventDefault","axios","post","newData","localStorage","setItem","JSON","stringify","console","log","disabled","Loader","diam"],"sourceRoot":""}