{"version":3,"file":"static/js/264.7f70eae6.chunk.js","mappings":"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","sources":["Screens/settings/ManageEmailComponents/SetUpEmail.js","Screens/settings/ManageEmailComponents/EditEmail.js","Screens/settings/ManageEmail.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { isValidEmail } from '../../../utils'\r\nimport axios from 'axios'\r\nimport { UserContext } from '../../../store/UserContext'\r\nimport { Message } from '../../../Components/Message'\r\nimport { BrowserContext } from '../../../store/BrowserContext'\r\nimport { TranslationContext } from '../../../store/TranslationContext'\r\n\r\nconst SetUpEmail = ({showUpdateEmail, setShowUpdateEmail, confirmEmail, loadingSetEmail, setLoadingSetEmail}) => {\r\n    const [newEmail, setNewEmail] = useState('')\r\n    const {userData, setUserData} = useContext(UserContext)\r\n    const [errorSettingEmail, setErrorSettingEmail] = useState(null)\r\n    const link = useRef('/api/settings/set-email/')\r\n    useEffect(()=>{\r\n        if(showUpdateEmail){\r\n            link.current = '/api/settings/update-email/'\r\n            setNewEmail(userData.email)\r\n        }\r\n    }, [])\r\n    const setEmail =()=>{\r\n        setLoadingSetEmail(true)\r\n        axios.post(\r\n          link.current,\r\n          {\r\n            email : newEmail\r\n          },\r\n          {\r\n            headers : {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n              Authorization : 'Bearer ' + userData.token\r\n            }\r\n          }\r\n        ).then(response=>{\r\n            setUserData(prevState=>{\r\n                let newUserData = {...userData, email : response.data.email, is_email_verified : false}\r\n                localStorage.setItem('userData', JSON.stringify(newUserData))\r\n                return newUserData\r\n            })\r\n            confirmEmail()\r\n        })\r\n        .catch(error=>{\r\n            setErrorSettingEmail(error)\r\n            setLoadingSetEmail(false)\r\n        })\r\n      }\r\n      const goBack =()=>{\r\n        setShowUpdateEmail(false)\r\n      }\r\n      const {Left, E} = useContext(BrowserContext)\r\n      const {translate} = useContext(TranslationContext)\r\n    return (\r\n        <div className={`container mw-500`}>\r\n          <div className='card p-3 m-3'>\r\n              {errorSettingEmail && <Message variant='danger' removeAlert={()=>{setErrorSettingEmail(null)}} className='m-2'>{ errorSettingEmail.response.data.detail || errorSettingEmail.message }</Message>}\r\n              <h4>{showUpdateEmail ? <><button onClick={goBack} className='btn btn-outline-success'><i className={`fa-solid fa-chevron-${Left}`}></i></button> {translate('Update')}</> : translate('Set up your email')}</h4>\r\n              <input value={newEmail} placeholder={translate('Email')} onChange={(e)=>setNewEmail(e.target.value)} className='form-control my-4 col-6' ></input>\r\n              <button disabled={!isValidEmail(newEmail) || newEmail === userData.email || loadingSetEmail} onClick={setEmail} className='btn btn-success'>{loadingSetEmail ? translate('Setting up your email...') : translate('Set up')}</button>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetUpEmail","import React, { useContext, useState } from 'react'\r\nimport { UserContext } from '../../../store/UserContext'\r\nimport { BrowserContext } from '../../../store/BrowserContext'\r\nimport {TranslationContext} from '../../../store/TranslationContext'\r\nimport { hideUnhide } from '../../../utils'\r\nimport axios from 'axios'\r\n\r\nconst EditEmail = ({confirmEmail, setShowUpdateEmail, loadingVerifyEmail}) => {\r\n    const [loadingDeleteEmail, setLoadingDeleteEmail] = useState(false)\r\n    const {userData, setUserData} = useContext(UserContext)\r\n    const {setGlobalMessage, togglePopup} = useContext(BrowserContext)\r\n    const deleteEmail = ()=>{\r\n        setLoadingDeleteEmail(true)\r\n        axios.post(\r\n        '/api/settings/delete-email/',\r\n        {},\r\n        {\r\n            headers : {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization : 'Bearer ' + userData.token\r\n            }\r\n        }).then(response=>{\r\n            setGlobalMessage({\r\n                variant : 'success',\r\n                text : response.data.detail,\r\n                className : 'm-3'\r\n            })\r\n            setUserData(prevState=>{\r\n                let newData = {...prevState, email :'', is_email_verified:false}\r\n                localStorage.setItem('userData', JSON.stringify(newData))\r\n                return newData\r\n            })\r\n            setLoadingDeleteEmail(false)\r\n        })\r\n        .catch(error=>{\r\n            setGlobalMessage({\r\n            variant : 'danger',\r\n            text : error.response.data.detail || error.message,\r\n            className : 'm-3'\r\n            })\r\n            setLoadingDeleteEmail(false)\r\n        })\r\n        }\r\n        const {translate} = useContext(TranslationContext)\r\n    return (\r\n        <div className={`container mw-700`}>\r\n            <div className='card m-3'>\r\n                <div className='mx-3 mt-2'>\r\n                    <strong>{translate('Current email address')}</strong>\r\n                    <div><strong className='text-grey'>{ userData.email }</strong></div>\r\n                    <div><strong className={ userData.is_email_verified ? 'color-theme' : 'text-danger' }>{ userData.is_email_verified ? translate('Verified') : translate('Not verified') }</strong></div>\r\n                </div>\r\n                <hr/>\r\n                { !userData.is_email_verified && \r\n                    <>\r\n                    <button className='mx-3 enlage-hover  text-start'onClick={confirmEmail}><strong>{loadingVerifyEmail ? translate('Sending the verification link to your email ...'): <><i className=\"fa-solid fa-check mx-3\"></i> {translate('Click here to verify your email')}</>}</strong></button>\r\n                    <hr/> \r\n                    </>\r\n                }\r\n                <button className='mx-3 enlage-hover text-start'onClick={()=>setShowUpdateEmail(true)}><i className=\"fa-solid fa-pen-to-square mx-3\"></i><strong>{translate('Update Your email')}</strong></button>\r\n                <hr/> \r\n                <button className='mx-3 mb-3 text-danger enlage-hover text-start' onClick={()=>hideUnhide('delete-email-question', togglePopup)}><i className=\"fa-solid fa-trash mx-3\"></i><strong>{translate('Delete your email')}</strong></button>\r\n                <div className='m-3' id='delete-email-question' hidden>\r\n                    <strong>{translate('Are you sure you want to delete your email ?')}</strong>\r\n                    <div className='mx-3 mt-3'><div className='text-end'><button className='btn btn-danger mx-2' onClick={deleteEmail}>{ loadingDeleteEmail ? translate('Deleting your email ...') : translate('Yes') }</button><button onClick={()=>hideUnhide('delete-email-question', togglePopup)} className='btn btn-outline-success'>{translate('No')}</button> </div></div>\r\n                </div>\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditEmail","import React, { useContext, useEffect, useState} from 'react'\r\nimport { UserContext } from '../../store/UserContext'\r\nimport {BrowserContext} from '../../store/BrowserContext'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport SetUpEmail from './ManageEmailComponents/SetUpEmail'\r\nimport EditEmail from './ManageEmailComponents/EditEmail'\r\nimport axios from 'axios'\r\nimport { TranslationContext } from '../../store/TranslationContext'\r\n\r\nconst ManageEmail = () => {\r\n    const browserContext = useContext(BrowserContext)\r\n    ///////////////////////////////////\r\n    //\r\n    const navigate = useNavigate()\r\n    const url = window.location.href\r\n    const searchParams = new URLSearchParams(url.split('?')[1]);\r\n    const emailVerified = searchParams.get('email-verified');\r\n    const email = searchParams.get('email');\r\n    const {userData, setUserData} = useContext(UserContext)\r\n    const {setGlobalMessage} = browserContext\r\n    const [loadingVerifyEmail, setLoadingVerifyEmail] = useState(false)\r\n    const [loadingSetEmail, setLoadingSetEmail] = useState(false)\r\n    const [showUpdateEmail, setShowUpdateEmail] = useState(false)\r\n    const [showSetUpEmail, setShowSetUpEmail] = useState(false)\r\n    useEffect(()=>{\r\n      if (emailVerified === 'true'){\r\n        setGlobalMessage({\r\n          variant : 'success',\r\n          text : `You email \"${email}\" is verified`,\r\n          className : 'm-3'\r\n        })\r\n        setUserData(prev=>{\r\n            let newData = {\r\n              ...prev, \r\n              extention : {\r\n                ...prev.extention,\r\n                email_verified : true\r\n              }\r\n            }\r\n            localStorage.setItem('userData', JSON.stringify(newData))\r\n            return newData\r\n        })\r\n        navigate('/settings/manage-email/')\r\n      }else if (emailVerified === 'false'){\r\n        setGlobalMessage({\r\n          variant : 'danger',\r\n          text : 'Invalid link',\r\n          className : 'm-3'\r\n        })\r\n        navigate('/settings/manage-email/')\r\n      }\r\n    },[])\r\n    useEffect(()=>{\r\n      if (!userData.email) setShowSetUpEmail(true) \r\n    },[userData])\r\n\r\n    const confirmEmail  =()=>{ \r\n      setLoadingVerifyEmail(true)\r\n      axios.post(\r\n        '/api/settings/confirm-email/',\r\n        {},\r\n        {\r\n          headers : {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization : 'Bearer ' + userData.token\r\n          }\r\n      }).then(response=>{\r\n          setGlobalMessage({\r\n            variant : 'success',\r\n            text : response.data.detail,\r\n            className : 'm-3'\r\n          })\r\n          setShowUpdateEmail(false)\r\n          setShowSetUpEmail(false)\r\n          setLoadingVerifyEmail(false)\r\n          setLoadingSetEmail(false)\r\n      })\r\n      .catch(error=>{\r\n        setGlobalMessage({\r\n          variant : 'danger',\r\n          text : error.response.data.detail || error.message,\r\n          className : 'm-3'\r\n        })\r\n        setShowUpdateEmail(false)\r\n        setShowSetUpEmail(false)\r\n        setLoadingVerifyEmail(false)\r\n        setLoadingSetEmail(false)\r\n      })\r\n    }\r\n  const showEmailInputSection = showUpdateEmail || showSetUpEmail\r\n\r\n  const {translate}=useContext(TranslationContext)\r\n  const {setTitle, setDescription} = useContext(BrowserContext)\r\n  useEffect(()=>{\r\n      setTitle(translate('Manage Email') + ` | ${translate('Ch7al Machya')}`) // Translate this\r\n      setDescription(translate('description'))\r\n  },[])\r\n  return (\r\n    <>\r\n        {!showEmailInputSection && \r\n          <EditEmail setLoadingSetEmail={setLoadingSetEmail} loadingSetEmail={loadingSetEmail}  setShowUpdateEmail={setShowUpdateEmail} confirmEmail={confirmEmail} loadingVerifyEmail={loadingVerifyEmail} setLoadingVerifyEmail={setLoadingVerifyEmail}/>\r\n        }\r\n        {showEmailInputSection && \r\n          <SetUpEmail setLoadingSetEmail={setLoadingSetEmail} setShowUpdateEmail={setShowUpdateEmail} loadingSetEmail={loadingSetEmail} setShowSetUpEmail={setShowSetUpEmail} confirmEmail={confirmEmail} setLoadingVerifyEmail={setLoadingVerifyEmail} showUpdateEmail={showUpdateEmail}  loadingVerifyEmail={loadingVerifyEmail}/>\r\n        }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageEmail"],"names":["_ref","showUpdateEmail","setShowUpdateEmail","confirmEmail","loadingSetEmail","setLoadingSetEmail","newEmail","setNewEmail","useState","userData","setUserData","useContext","UserContext","errorSettingEmail","setErrorSettingEmail","link","useRef","useEffect","current","email","Left","E","BrowserContext","translate","TranslationContext","_jsx","className","children","_jsxs","Message","variant","removeAlert","response","data","detail","message","_Fragment","onClick","goBack","concat","value","placeholder","onChange","e","target","disabled","isValidEmail","setEmail","axios","post","headers","Authorization","token","then","prevState","newUserData","is_email_verified","localStorage","setItem","JSON","stringify","catch","error","loadingVerifyEmail","loadingDeleteEmail","setLoadingDeleteEmail","setGlobalMessage","togglePopup","hideUnhide","id","hidden","deleteEmail","text","newData","ManageEmail","browserContext","navigate","useNavigate","url","window","location","href","searchParams","URLSearchParams","split","emailVerified","get","setLoadingVerifyEmail","showSetUpEmail","setShowSetUpEmail","prev","extention","email_verified","showEmailInputSection","setTitle","setDescription","EditEmail","SetUpEmail"],"sourceRoot":""}