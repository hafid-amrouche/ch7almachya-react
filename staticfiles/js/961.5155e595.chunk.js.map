{"version":3,"file":"static/js/961.5155e595.chunk.js","mappings":"6HAEA,MAwBA,EAxB2BA,IAA8B,IAA7B,KAACC,EAAI,MAAEC,KAAUC,GAAMH,EAcjD,OACEI,EAAAA,EAAAA,KAAA,YACEH,KAbkBI,MAEpB,MAAMC,GAAaJ,EAAMK,MAAM,QAAU,IAAIC,OAAS,EAEhDC,EAAUR,EAIhB,OAAOS,KAAKC,IAAID,KAAKE,IAAIN,EAAWG,GAHpB,EAGsC,EAK9CJ,GACNQ,MAAO,CAAEC,OAAQ,QACjBZ,MAAOA,KACHC,GACJ,C,kICdN,MAkDA,EAlDkBY,KACd,MAAM,UAACC,IAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IACvBC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,OAC1BK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,OAC5BO,EAAMC,IAAWR,EAAAA,EAAAA,UAAS,KAC1BS,EAAOC,IAAYV,EAAAA,EAAAA,UAAS,IAsB7BW,EAAiBV,GAAwB,IAAbM,EAAKK,QAA2B,IAAdH,EAAMG,QAA8B,IAAhBd,EAAQc,QAC1E,SAACC,EAAQ,eAAEC,IAAkBlB,EAAAA,EAAAA,YAAWmB,EAAAA,GAK/C,OAJCC,EAAAA,EAAAA,YAAU,KACNH,EAAS,GAADI,OAAItB,EAAU,cAAa,OAAAsB,OAAMtB,EAAU,kBACnDmB,EAAenB,EAAU,gGAAgG,GAC3H,KAEFuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAC/BjB,IAAQpB,EAAAA,EAAAA,KAACsC,EAAAA,EAAO,CAACC,QAAQ,UAAUC,YAAaA,KAAKnB,EAAQ,KAAK,EAAEgB,SAAGjB,IACvEE,IAAStB,EAAAA,EAAAA,KAACsC,EAAAA,EAAO,CAACC,QAAQ,SAASC,YAAaA,KAAKjB,EAAS,KAAK,EAAEc,SAAGf,EAAMmB,SAASrB,KAAKsB,QAAUpB,EAAMP,WAC9GoB,EAAAA,EAAAA,MAAA,QAAMQ,KAAK,OAAOP,UAAU,qDAAoDC,SAAA,EAC5ErC,EAAAA,EAAAA,KAAA,MAAAqC,SAAKzB,EAAU,iBACfZ,EAAAA,EAAAA,KAAA,SAAO4C,UAAW,IAAK9C,MAAO0B,EAAMqB,SAAUC,IAAIrB,EAAQqB,EAAEC,OAAOjD,MAAM,EAAGkD,YAAapC,EAAU,QAASwB,UAAU,kBACtHpC,EAAAA,EAAAA,KAAA,SAAO2C,KAAK,QAAQC,UAAW,IAAK9C,MAAO4B,EAAOmB,SAAUC,IAAInB,EAASmB,EAAEC,OAAOjD,MAAM,EAAGkD,YAAapC,EAAU,SAAUwB,UAAU,kBACtIpC,EAAAA,EAAAA,KAACiD,EAAAA,EAAkB,CAACL,UAAW,IAAM/C,KAAM,EAAGC,MAAOiB,EAAS8B,SAAUC,GAAG9B,EAAW8B,EAAEC,OAAOjD,OAAQkD,YAAapC,EAAU,WAAYwB,UAAU,kBACpJD,EAAAA,EAAAA,MAAA,UAAQe,SAAUtB,EAAgBuB,QApCtBC,KAChBjC,GAAW,GACXkC,EAAAA,EAAMC,KACF,mBACA,CAAC9B,OAAME,QAAOX,WACd,CACIwC,QAAU,CACR,eAAgB,yBAGxBC,MAAKf,IACHpB,EAAQoB,EAASrB,MACjBD,GAAW,GACXM,EAAQ,IACRE,EAAS,IACTX,EAAW,GAAG,IACfyC,OAAMnC,IACLC,EAASD,GACTH,GAAW,EAAM,GACnB,EAiB4DiB,UAAU,8DAA6DC,SAAA,CAAEzB,EAAU,UAAYM,IAAWlB,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACC,KAAM,aAEpL,C","sources":["Components/UI/AutoResizeTextarea.js","Screens/ContactUs.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AutoResizeTextarea = ({rows, value, ...props}) => {\r\n\r\n\r\n  const calculateRows = () => {\r\n    // Count the number of lines in the textarea value\r\n    const lineCount = (value.match(/\\n/g) || []).length + 1;\r\n    // Set a minimum number_ of rows to ensure visibility\r\n    const minRows = rows;\r\n    const maxRows = 6; // Set your desired maximum number of rows\r\n\r\n    // Return a value within the specified range\r\n    return Math.min(Math.max(lineCount, minRows), maxRows);\r\n  };\r\n\r\n  return (\r\n    <textarea\r\n      rows={calculateRows()}\r\n      style={{ resize: 'none' }}\r\n      value={value}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AutoResizeTextarea;","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { TranslationContext } from '../store/TranslationContext'\r\nimport AutoResizeTextarea from '../Components/UI/AutoResizeTextarea'\r\nimport { Message } from '../Components/Message'\r\nimport axios from 'axios'\r\nimport { Loader } from '../Components/Loader'\r\nimport { BrowserContext } from '../store/BrowserContext'\r\n\r\nconst ContactUs = () => {\r\n    const {translate} =useContext(TranslationContext)\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const submitMessage=()=>{\r\n        setLoading(true)\r\n        axios.post(\r\n            '/api/contact-us/',\r\n            {name, email, message},\r\n            {\r\n                headers : {\r\n                  \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n              }\r\n        ).then(response=>{\r\n            setData(response.data)\r\n            setLoading(false)\r\n            setName('')\r\n            setEmail('')\r\n            setMessage('')\r\n        }).catch(error=>{\r\n            setError(error)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    const buttonDisabled = loading || name.trim()==''|| email.trim()=='' || message.trim()==''\r\n    const {setTitle, setDescription} = useContext(BrowserContext)\r\n    useEffect(()=>{\r\n        setTitle(`${translate('Contact us')} | ${translate('Ch7al Machya')}`) // Translate this\r\n        setDescription(translate('Contact our team at Ch7al machya for any information we will reply to you in less than a day'))\r\n    },[])\r\n   return (\r\n    <div className='container mw-500 p-0'>\r\n        { data && <Message variant='success' removeAlert={()=>{setData(null)}}>{ data }</Message>}\r\n        { error && <Message variant='danger' removeAlert={()=>{setError(null)}}>{ error.response.data.detail || error.message }</Message>}\r\n        <form type='POST' className='card mx-2 mt-4 p-2 p-md-3 d-flex flex-column gap-3'>\r\n            <h4>{translate('Contact us')}</h4>\r\n            <input maxLength={100} value={name} onChange={e=>{setName(e.target.value)}} placeholder={translate('Name')} className='form-control'/>\r\n            <input type='email' maxLength={100} value={email} onChange={e=>{setEmail(e.target.value)}} placeholder={translate('Email')} className='form-control' />\r\n            <AutoResizeTextarea maxLength={1000} rows={5} value={message} onChange={e=>setMessage(e.target.value)} placeholder={translate('Message')} className='form-control'/>\r\n            <button disabled={buttonDisabled} onClick={submitMessage} className='btn btn-outline-success d-flex gap-2 justify-content-center'>{translate('Submit')}{ loading && <Loader diam={23} />}</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactUs"],"names":["_ref","rows","value","props","_jsx","calculateRows","lineCount","match","length","minRows","Math","min","max","style","resize","ContactUs","translate","useContext","TranslationContext","message","setMessage","useState","loading","setLoading","data","setData","error","setError","name","setName","email","setEmail","buttonDisabled","trim","setTitle","setDescription","BrowserContext","useEffect","concat","_jsxs","className","children","Message","variant","removeAlert","response","detail","type","maxLength","onChange","e","target","placeholder","AutoResizeTextarea","disabled","onClick","submitMessage","axios","post","headers","then","catch","Loader","diam"],"sourceRoot":""}