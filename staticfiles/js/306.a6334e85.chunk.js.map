{"version":3,"file":"static/js/306.a6334e85.chunk.js","mappings":"uMAQA,MAuEA,EAvEsBA,KAClB,MAAMC,GAAiBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC5B,MAAEC,EAAK,OAAEC,EAAM,MAAEC,IAASC,EAAAA,EAAAA,OAGzBC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IACjC,iBAACK,GAAoBd,GAmCrB,UAACe,IAAad,EAAAA,EAAAA,YAAWe,EAAAA,IAG3B,SAACC,EAAQ,eAAEC,IAAkBjB,EAAAA,EAAAA,YAAWC,EAAAA,GAK9C,OAJAiB,EAAAA,EAAAA,YAAU,KACNF,EAASF,EAAU,kBAAiB,MAAAK,OAASL,EAAU,kBACvDG,EAAeH,EAAU,eAAe,GAC1C,KAEAM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,SAAER,EAAU,qBAC/BM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,SAAOI,KAAK,WAAYH,UAAU,eAAeI,MAAOnB,EAAaoB,SAAWC,IAAKpB,EAAeoB,EAAEC,OAAOH,MAAM,EAAGI,YAAaf,EAAU,qBAEjJM,EAAAA,EAAAA,KAAA,UAAQC,UAAU,mBAAkBC,SAAGhB,EAAYwB,OAAS,GAAKxB,EAAYwB,OAAQ,EAAIhB,EAAU,kDAAoD,MACvJM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,SAAOI,KAAK,WAAYH,UAAU,eAAeI,MAAOhB,EAAiBiB,SAAWC,IAAKjB,EAAmBiB,EAAEC,OAAOH,MAAM,EAAGI,YAAaf,EAAU,6BAEzJM,EAAAA,EAAAA,KAAA,UAAQC,UAAU,mBAAkBC,SAAIhB,EAAYwB,QAAS,GAAKxB,IAAgBG,EAAmBK,EAAU,0BAA4B,MAC3IM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACpCC,EAAAA,EAAAA,MAAA,UAAQQ,QAtDEC,KAClBpB,GAAW,GACXqB,EAAAA,EAAMC,KACJ,kCACA,CACEC,SAAS7B,EACT8B,iBAAiB3B,EACjBP,QAAMC,SAAOC,SAEf,CACEiC,QAAU,CACR,eAAgB,yBAEnBC,MAAKC,IACJ1B,EAAiB,CACf2B,QAAU,UACVC,KAAOF,EAASG,KAAKC,OACrBtB,UAAY,QAEduB,aAAaC,QAAQ,WAAYC,KAAKC,UAAUR,EAASG,KAAKM,YAC9DtC,EAAmB,IACnBH,EAAe,IACf0C,YAAW,KAAKC,OAAOC,SAASC,KAAO,oBAAoB,GAAG,IAAK,IAEtEC,OAAMC,IACLzC,EAAiB,CACf2B,QAAU,SACVC,KAAOa,EAAMf,SAASG,KAAKC,QAAUW,EAAMC,QAC3ClC,UAAY,QAEdT,GAAW,EAAM,GACjB,EAuBsC4C,WAAalD,EAAYwB,QAAU,GAAKxB,IAAgBG,GAAmBY,UAAU,mCAAkCC,SAAA,CAAER,EAAU,kBAAoBH,IAAWS,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACC,KAAM,cAGtN,C","sources":["Screens/ResetPassword.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport {UserContext} from '../store/UserContext'\r\nimport axios from 'axios'\r\nimport { BrowserContext } from '../store/BrowserContext'\r\nimport { Loader } from '../Components/Loader'\r\nimport { useParams } from 'react-router-dom'\r\nimport {TranslationContax, TranslationContext} from '../store/TranslationContext'\r\n\r\nconst ResetPassword = () => {\r\n    const browserContext = useContext(BrowserContext)\r\n    const { email, uidb64, token} = useParams()\r\n    ///////////////////////////////////\r\n    //\r\n    const [newPassword, setNewPassword] = useState('') \r\n    const [confirmPassword, setConfirmPassword] = useState('') \r\n    const [loading, setLoading] = useState(false)\r\n    const {setGlobalMessage} = browserContext\r\n\r\n    const resetPassword  =()=>{ \r\n        setLoading(true)\r\n        axios.post(\r\n          '/api/reset-password-validation/',\r\n          {\r\n            password:newPassword,\r\n            confirm_password:confirmPassword,\r\n            email,uidb64,token\r\n          },\r\n          {\r\n            headers : {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            }\r\n        }).then(response=>{\r\n            setGlobalMessage({\r\n              variant : 'success',\r\n              text : response.data.detail,\r\n              className : 'm-3'\r\n            })\r\n            localStorage.setItem('userData', JSON.stringify(response.data.user_data))\r\n            setConfirmPassword('')\r\n            setNewPassword('')\r\n            setTimeout(()=>{window.location.href = '/settings/profile/'}, 1000)\r\n        })\r\n        .catch(error=>{\r\n          setGlobalMessage({\r\n            variant : 'danger',\r\n            text : error.response.data.detail || error.message,\r\n            className : 'm-3'\r\n          })\r\n          setLoading(false)\r\n        })\r\n    }\r\n    const {translate} = useContext(TranslationContext)\r\n  ////////////\r\n  //\r\n  const {setTitle, setDescription} = useContext(BrowserContext)\r\n  useEffect(()=>{\r\n      setTitle(translate('Reset password') + ` | ${translate('Ch7al Machya')}`)\r\n      setDescription(translate('description'))\r\n  },[])\r\n  return (\r\n    <div className='mw-700 container'>\r\n        <div className='card m-3 pb-3 mt-5'>\r\n            <h3 className='m-3'>{translate('Reset password')}</h3>\r\n            <div className='m-3'>\r\n                <input type='password'  className='form-control' value={newPassword} onChange={(e)=>{setNewPassword(e.target.value)}} placeholder={translate('New password')}></input>\r\n            </div>\r\n            <strong className='text-danger mx-4'>{ newPassword.length > 0 && newPassword.length <8 ? translate('New password should have at least 8 characters') : '' }</strong>\r\n            <div className='m-3'>\r\n                <input type='password'  className='form-control' value={confirmPassword} onChange={(e)=>{setConfirmPassword(e.target.value)}} placeholder={translate('Rewrite new password')}></input>\r\n            </div>\r\n            <strong className='text-danger mx-4'>{  newPassword.length >=8 && newPassword !== confirmPassword  ? translate('Passwords Do not match') : '' }</strong>\r\n            <div className='d-flex flex-row-reverse'>\r\n                <button onClick={resetPassword} disabled={ !(newPassword.length >= 8 && newPassword === confirmPassword) } className='btn btn-success m-3 d-flex gap-2'>{translate('Reset password')}{ loading && <Loader diam={23}/>}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword"],"names":["ResetPassword","browserContext","useContext","BrowserContext","email","uidb64","token","useParams","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","loading","setLoading","setGlobalMessage","translate","TranslationContext","setTitle","setDescription","useEffect","concat","_jsx","className","children","_jsxs","type","value","onChange","e","target","placeholder","length","onClick","resetPassword","axios","post","password","confirm_password","headers","then","response","variant","text","data","detail","localStorage","setItem","JSON","stringify","user_data","setTimeout","window","location","href","catch","error","message","disabled","Loader","diam"],"sourceRoot":""}