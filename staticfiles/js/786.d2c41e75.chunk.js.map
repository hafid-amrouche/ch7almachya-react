{"version":3,"file":"static/js/786.d2c41e75.chunk.js","mappings":"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","sources":["Screens/user/CommentScreen.js"],"sourcesContent":["import React, {useEffect, useState, useContext, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport {useParams, Link, useNavigate} from 'react-router-dom'\r\nimport TimeElapsed from '../../Components/TimeElapsed'\r\nimport styled from 'styled-components'\r\nimport { BrowserContext } from '../../store/BrowserContext'\r\nimport {TranslationContext} from '../../store/TranslationContext'\r\nimport { hideUnhide } from '../../utils'\r\nimport { UserContext } from '../../store/UserContext'\r\nimport {Message} from '../../Components/Message'\r\n\r\n\r\nconst CommentScreen = () => {\r\n  const {commentId} = useParams()\r\n  const [comment, setComment] = useState(null)\r\n  const {language, togglePopup, Right, openReportModal} = useContext(BrowserContext)\r\n  const {translate} = useContext(TranslationContext)\r\n  const {userData} = useContext(UserContext)\r\n  const username = useParams().username.replace('@', '')\r\n  const [deleteCommentLoading, setDeleteCommentLoading] = useState(false)\r\n  const [errorDeleltingComment, setErrorDeletingComment] = useState(null)\r\n  const [articleSlug, setArticleSlug] = useState('')\r\n\r\n  const navigate = useNavigate()\r\n  const deleteComment = ()=>{\r\n    setDeleteCommentLoading(true)\r\n    axios.post(\r\n        '/api/article/delete-comment/',\r\n        {'comment-id' : commentId},\r\n        {\r\n            headers : {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n              'Authorization' : 'Bearer ' + userData.token\r\n            }\r\n        }\r\n        ).then((response)=>{\r\n        setDeleteCommentLoading(false)\r\n        navigate(articleSlug)\r\n    }).catch((error)=>{\r\n        setErrorDeletingComment(error)\r\n        setDeleteCommentLoading(false)\r\n        document.getElementById(`comment-${comment.id}`).setAttribute('hidden', '')\r\n    })\r\n    \r\n}\r\n\r\n  useEffect(()=>{\r\n    axios.get(\r\n        '/api/article/get-comment/?comment_id=' + commentId,\r\n        {}\r\n        ).then(response=>{\r\n        setComment(response.data[0])\r\n        setArticleSlug(response.data[1])\r\n    })\r\n  }, [])\r\n  \r\n  return (\r\n    <div className='container mw-700 p-0'>\r\n        <div className='card overflow-visible m-2 m-md-3'>\r\n            { comment && \r\n                <div className='bg-color-white p-3 border rounded d-flex flex-column'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <Link to={`/@${comment.commenter_username}/`} className='d-flex align-items-center'>\r\n                            <div className='image-in-circle mx-2' style={{ width: 40, backgroundImage : `url('${ comment.commenter_image }')` }} ></div>\r\n                            <div className='d-flex flex-column'>\r\n                                <span>{ comment.commenter_name.text || comment.commenter_name} {comment.commenter_name.is_verified && <img width='16' src='/static/others/verified.png'/>}</span>\r\n                                <TimeElapsed className='small text-grey' time={comment.created_at} language={language} />\r\n                            </div>   \r\n                        </Link>\r\n                        \r\n                        <button onClick={ ()=>{hideUnhide(`comment-${comment.id}`, togglePopup)} } className='btn btn-outline-success margin-inline-start-auto '><i className=\"fa-solid fa-ellipsis fa-2xl\" ></i></button>\r\n                    </div>\r\n                    <p className='mt-2 flex-grow-1'>\r\n                        {comment.text}\r\n                    </p>\r\n                    <div className='parameters bg-white border rounded' style={{[Right]: 30, top: 80}} hidden id={`comment-${comment.id}`}>\r\n                        {comment.commenter_id === userData.id || userData.username === username ? \r\n                            (deleteCommentLoading ?\r\n                                <div className='p-3 d-flex'><span className='mx-1'>{translate('Deleting comment...')}</span></div> :\r\n                                <div className='p-3' onClick={deleteComment}><i className=\"fa-solid fa-trash px-2 py-1 rounded mx-1\"></i><span className='mx-1'>{translate('Delete comment')}</span></div>\r\n                            ) : ''\r\n                        }\r\n                        <div className='p-3' onClick={()=>{ togglePopup(\"\"); openReportModal.current.setData({type:'Comment', comment_id: comment.id}); openReportModal.current.openPopUp()}}><i className=\"fa-solid fa-exclamation px-3 py-1 rounded  mx-1\"></i><span className='mx-1'>{translate('Report')}</span></div>\r\n                    </div>\r\n                    <div className='mt-4'>\r\n                        <Link to={articleSlug} className=\"btn btn-outline-success px-4\" >{translate('Go back')}</Link>\r\n                    </div>\r\n                    { errorDeleltingComment && <Message removeAlert={()=>setErrorDeletingComment(null)} variant='danger' className='mt-5'>{ errorDeleltingComment.message && errorDeleltingComment.response.data.message }</Message> }\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentScreen"],"names":["CommentScreen","commentId","useParams","comment","setComment","useState","language","togglePopup","Right","openReportModal","useContext","BrowserContext","translate","TranslationContext","userData","UserContext","username","replace","deleteCommentLoading","setDeleteCommentLoading","errorDeleltingComment","setErrorDeletingComment","articleSlug","setArticleSlug","navigate","useNavigate","useEffect","axios","get","then","response","data","_jsx","className","children","_jsxs","Link","to","concat","commenter_username","style","width","backgroundImage","commenter_image","commenter_name","text","is_verified","src","TimeElapsed","time","created_at","onClick","hideUnhide","id","top","hidden","commenter_id","deleteComment","post","headers","token","catch","error","document","getElementById","setAttribute","current","setData","type","comment_id","openPopUp","Message","removeAlert","variant","message"],"sourceRoot":""}